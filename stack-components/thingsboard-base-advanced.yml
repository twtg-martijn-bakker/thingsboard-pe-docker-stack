version: '3.8'

services:

## Thingsboard PE

  tb-js-executor:
    restart: unless-stopped
    image: ${DOCKER_REGISTRY_BASE_URL}/tb-pe-js-executor:${TB_VERSION}
    scale: 1
    environment:
      REMOTE_JS_EVAL_REQUEST_TOPIC: js_eval.requests
      LOGGER_LEVEL: info
      LOG_FOLDER: logs
      LOGGER_FILENAME: tb-js-executor-%DATE%.log
      DOCKER_MODE: 'true'
      SCRIPT_BODY_TRACE_FREQUENCY: 1000

  tb-core:
    restart: unless-stopped
    image: ${DOCKER_REGISTRY_BASE_URL}/tb-pe-node:${TB_VERSION}
    ports:
      - "8080"
      - "7070"

    environment:
      TB_SERVICE_ID: tb-core1
      TB_SERVICE_TYPE: tb-core
      EDGES_ENABLED: "true"

    env_file:
      - ./stack-components/configs/thingsboard-base.env
      - ./stack-components/configs/zookeeper.env
      - ./stack-components/configs/postgres.env
      - ./stack-components/configs/redis.env
      - ./stack-components/configs/metrics.env
      - ./thingsboard-license.env

    volumes:
      - ./config/tb-node:/config
      - ./logs/tb-node:/var/log/thingsboard
      - ./data/tb-node:/data

    depends_on:
      - zookeeper
      - postgres
      - redis
      - tb-js-executor
      - tb-rule-engine

  tb-rule-engine:
    restart: unless-stopped
    image: ${DOCKER_REGISTRY_BASE_URL}/tb-pe-node:${TB_VERSION}

    ports:
      - "8080"

    env_file:
      - ./stack-components/configs/thingsboard-base.env
      - ./stack-components/configs/zookeeper.env
      - ./stack-components/configs/postgres.env
      - ./stack-components/configs/redis.env
      - ./stack-components/configs/metrics.env
      - ./thingsboard-license.env

    environment:
      TB_SERVICE_ID: tb-rule-engine1
      TB_SERVICE_TYPE: tb-rule-engine

    volumes:
      - ./config/tb-node:/config
      - ./logs/tb-node:/var/log/thingsboard
      - ./data/tb-node:/data

    depends_on:
      - zookeeper
      - postgres
      - redis
      - tb-js-executor

  tb-web-report:
    image: ${DOCKER_REGISTRY_BASE_URL}/tb-pe-web-report:${TB_VERSION}
    restart: unless-stopped

    ports:
      - "8383"

    environment:
      HTTP_BIND_ADDRESS: 0.0.0.0
      HTTP_BIND_PORT: 8383
      LOGGER_LEVEL: info
      LOG_FOLDER: logs
      LOGGER_FILENAME: tb-web-report-%DATE%.log
      DOCKER_MODE: 'true'
      DEFAULT_PAGE_NAVIGATION_TIMEOUT: 120000
      DASHBOARD_LOAD_WAIT_TIME: 3000

  tb-web-ui:
    image: ${DOCKER_REGISTRY_BASE_URL}/tb-pe-web-ui:${TB_VERSION}
    restart: unless-stopped
    ports:
      - "8080"

    environment:
      HTTP_BIND_ADDRESS: 0.0.0.0
      HTTP_BIND_PORT: 8080
      TB_ENABLE_PROXY: 'false'
      LOGGER_LEVEL: info
      LOG_FOLDER: logs
      LOGGER_FILENAME: tb-web-ui-%DATE%.log
      DOCKER_MODE: 'true'

  ## required services

  haproxy:
    image: thingsboard/haproxy-certbot:1.3.0
    restart: unless-stopped
    container_name: "${LOAD_BALANCER_NAME}"

    volumes:
     - ./config/haproxy:/config
     - ./secrets/letsencrypt:/etc/letsencrypt
     - ./secrets/haproxy/certs:/usr/local/etc/haproxy/certs.d

    cap_add:
     - NET_ADMIN

    links:
      - tb-core
      - tb-web-ui
      - tb-web-report

  zookeeper:
    restart: unless-stopped
    image: zookeeper:3.5
    ports:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181

  redis:
    image: redis:4.0
    restart: unless-stopped
    ports:
      - "6379"

  postgres:
    image: postgres:12
    restart: unless-stopped
    ports:
      - "5432"
    environment:
      POSTGRES_DB: thingsboard
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
